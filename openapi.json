{
    "openapi": "3.1.0",
    "info": {
      "title": "Bonheur API",
      "description": "Bonheur3 API - English Language Learning Platform",
      "version": "1.0.0"
    },
    "paths": {
      "/api/v1/auth/login": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Login",
          "description": "Login endpoint for obtaining access and refresh tokens.",
          "operationId": "login_api_v1_auth_login_post",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/Body_login_api_v1_auth_login_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Response Login Api V1 Auth Login Post"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/register": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Register",
          "description": "Register a new user.",
          "operationId": "register_api_v1_auth_register_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Response Register Api V1 Auth Register Post"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/refresh": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Refresh",
          "description": "Refresh access token using refresh token.",
          "operationId": "refresh_api_v1_auth_refresh_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Response Refresh Api V1 Auth Refresh Post"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        }
      },
      "/api/v1/auth/logout": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Logout",
          "description": "Logout user by blacklisting current token.",
          "operationId": "logout_api_v1_auth_logout_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Response Logout Api V1 Auth Logout Post"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        }
      },
      "/api/v1/auth/me": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "summary": "Read Users Me",
          "description": "Get current user information.",
          "operationId": "read_users_me_api_v1_auth_me_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        }
      },
      "/api/v1/students/": {
        "get": {
          "tags": [
            "Students"
          ],
          "summary": "Get Students",
          "description": "Get all students. Requires READ_STUDENTS scope.",
          "operationId": "get_students_api_v1_students__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:students"
              ]
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/StudentProfile"
                    },
                    "title": "Response Get Students Api V1 Students  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Students"
          ],
          "summary": "Create Student",
          "description": "Create a new student profile. Requires WRITE_STUDENTS scope.",
          "operationId": "create_student_api_v1_students__post",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:students"
              ]
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProfile"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StudentProfile"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/students/{student_id}": {
        "get": {
          "tags": [
            "Students"
          ],
          "summary": "Get Student",
          "description": "Get a specific student profile. Requires READ_STUDENTS scope.",
          "operationId": "get_student_api_v1_students__student_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:students"
              ]
            }
          ],
          "parameters": [
            {
              "name": "student_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Student Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StudentProfile"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Students"
          ],
          "summary": "Update Student",
          "description": "Update a student profile. Requires WRITE_STUDENTS scope.",
          "operationId": "update_student_api_v1_students__student_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:students"
              ]
            }
          ],
          "parameters": [
            {
              "name": "student_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Student Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProfile"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StudentProfile"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Students"
          ],
          "summary": "Delete Student",
          "description": "Delete a student profile. Requires DELETE_STUDENTS scope.",
          "operationId": "delete_student_api_v1_students__student_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "delete:students"
              ]
            }
          ],
          "parameters": [
            {
              "name": "student_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Student Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StudentProfile"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/curriculum/": {
        "get": {
          "tags": [
            "Curriculum"
          ],
          "summary": "Get Curriculum Templates",
          "description": "Get all curriculum templates.",
          "operationId": "get_curriculum_templates_api_v1_curriculum__get",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CurriculumTemplate"
                    },
                    "title": "Response Get Curriculum Templates Api V1 Curriculum  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Curriculum"
          ],
          "summary": "Create Curriculum Template",
          "description": "Create a new curriculum template.",
          "operationId": "create_curriculum_template_api_v1_curriculum__post",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurriculumTemplate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurriculumTemplate"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/curriculum/{curriculum_id}": {
        "get": {
          "tags": [
            "Curriculum"
          ],
          "summary": "Get Curriculum Template",
          "description": "Get a specific curriculum template.",
          "operationId": "get_curriculum_template_api_v1_curriculum__curriculum_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "curriculum_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Curriculum Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurriculumTemplate"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Curriculum"
          ],
          "summary": "Update Curriculum Template",
          "description": "Update a curriculum template.",
          "operationId": "update_curriculum_template_api_v1_curriculum__curriculum_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "curriculum_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Curriculum Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurriculumTemplate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurriculumTemplate"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Curriculum"
          ],
          "summary": "Delete Curriculum Template",
          "description": "Delete a curriculum template.",
          "operationId": "delete_curriculum_template_api_v1_curriculum__curriculum_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "curriculum_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Curriculum Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/cohorts/": {
        "get": {
          "tags": [
            "Cohorts"
          ],
          "summary": "Get Cohorts",
          "description": "Get all cohorts.",
          "operationId": "get_cohorts_api_v1_cohorts__get",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Cohort"
                    },
                    "title": "Response Get Cohorts Api V1 Cohorts  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Cohorts"
          ],
          "summary": "Create Cohort",
          "description": "Create new cohort.",
          "operationId": "create_cohort_api_v1_cohorts__post",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cohort"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cohort"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/cohorts/{cohort_id}": {
        "get": {
          "tags": [
            "Cohorts"
          ],
          "summary": "Get Cohort",
          "description": "Get cohort by ID.",
          "operationId": "get_cohort_api_v1_cohorts__cohort_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "cohort_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Cohort Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cohort"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Cohorts"
          ],
          "summary": "Update Cohort",
          "description": "Update cohort.",
          "operationId": "update_cohort_api_v1_cohorts__cohort_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "cohort_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Cohort Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cohort"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cohort"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Cohorts"
          ],
          "summary": "Delete Cohort",
          "description": "Delete cohort.",
          "operationId": "delete_cohort_api_v1_cohorts__cohort_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "cohort_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Cohort Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Response Delete Cohort Api V1 Cohorts  Cohort Id  Delete"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enrollments/": {
        "get": {
          "tags": [
            "Enrollments"
          ],
          "summary": "Get Enrollments",
          "description": "Get all enrollments.",
          "operationId": "get_enrollments_api_v1_enrollments__get",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Enrollment"
                    },
                    "title": "Response Get Enrollments Api V1 Enrollments  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Enrollments"
          ],
          "summary": "Create Enrollment",
          "description": "Create new enrollment.",
          "operationId": "create_enrollment_api_v1_enrollments__post",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Enrollment"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enrollments/{enrollment_id}": {
        "get": {
          "tags": [
            "Enrollments"
          ],
          "summary": "Get Enrollment",
          "description": "Get enrollment by ID.",
          "operationId": "get_enrollment_api_v1_enrollments__enrollment_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "enrollment_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Enrollment Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Enrollment"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Enrollments"
          ],
          "summary": "Update Enrollment",
          "description": "Update enrollment.",
          "operationId": "update_enrollment_api_v1_enrollments__enrollment_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "enrollment_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Enrollment Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Enrollment"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Enrollments"
          ],
          "summary": "Delete Enrollment",
          "description": "Delete enrollment.",
          "operationId": "delete_enrollment_api_v1_enrollments__enrollment_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "enrollment_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Enrollment Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Response Delete Enrollment Api V1 Enrollments  Enrollment Id  Delete"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/assessments/": {
        "get": {
          "tags": [
            "Assessments"
          ],
          "summary": "Get Assessments",
          "description": "Get all assessments. Requires READ_ASSESSMENTS scope.",
          "operationId": "get_assessments_api_v1_assessments__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:assessments"
              ]
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Assessment"
                    },
                    "title": "Response Get Assessments Api V1 Assessments  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Assessments"
          ],
          "summary": "Create Assessment",
          "description": "Create a new assessment. Requires WRITE_ASSESSMENTS scope.",
          "operationId": "create_assessment_api_v1_assessments__post",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:assessments"
              ]
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/assessments/{assessment_id}": {
        "get": {
          "tags": [
            "Assessments"
          ],
          "summary": "Get Assessment",
          "description": "Get a specific assessment. Requires READ_ASSESSMENTS scope.",
          "operationId": "get_assessment_api_v1_assessments__assessment_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:assessments"
              ]
            }
          ],
          "parameters": [
            {
              "name": "assessment_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Assessment Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Assessments"
          ],
          "summary": "Update Assessment",
          "description": "Update an assessment. Requires WRITE_ASSESSMENTS scope.",
          "operationId": "update_assessment_api_v1_assessments__assessment_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:assessments"
              ]
            }
          ],
          "parameters": [
            {
              "name": "assessment_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Assessment Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Assessments"
          ],
          "summary": "Delete Assessment",
          "description": "Delete an assessment. Requires DELETE_ASSESSMENTS scope.",
          "operationId": "delete_assessment_api_v1_assessments__assessment_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "delete:assessments"
              ]
            }
          ],
          "parameters": [
            {
              "name": "assessment_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Assessment Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assessment"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/assessments/{assessment_id}/submit": {
        "post": {
          "tags": [
            "Assessments"
          ],
          "summary": "Submit Assessment",
          "description": "Submit an assessment. Requires WRITE_ASSESSMENTS scope.",
          "operationId": "submit_assessment_api_v1_assessments__assessment_id__submit_post",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:assessments"
              ]
            }
          ],
          "parameters": [
            {
              "name": "assessment_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Assessment Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentSubmission"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AssessmentSubmission"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/materials/": {
        "get": {
          "tags": [
            "Materials"
          ],
          "summary": "Get Materials",
          "description": "Get all materials. Requires READ_MATERIALS scope.",
          "operationId": "get_materials_api_v1_materials__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:materials"
              ]
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Material"
                    },
                    "title": "Response Get Materials Api V1 Materials  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Materials"
          ],
          "summary": "Create Material",
          "description": "Create a new material. Requires WRITE_MATERIALS scope.",
          "operationId": "create_material_api_v1_materials__post",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:materials"
              ]
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Material"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Material"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/materials/{material_id}": {
        "get": {
          "tags": [
            "Materials"
          ],
          "summary": "Get Material",
          "description": "Get a specific material. Requires READ_MATERIALS scope.",
          "operationId": "get_material_api_v1_materials__material_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:materials"
              ]
            }
          ],
          "parameters": [
            {
              "name": "material_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Material Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Material"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Materials"
          ],
          "summary": "Update Material",
          "description": "Update a material. Requires WRITE_MATERIALS scope.",
          "operationId": "update_material_api_v1_materials__material_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:materials"
              ]
            }
          ],
          "parameters": [
            {
              "name": "material_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Material Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Material"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Material"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Materials"
          ],
          "summary": "Delete Material",
          "description": "Delete a material. Requires DELETE_MATERIALS scope.",
          "operationId": "delete_material_api_v1_materials__material_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "delete:materials"
              ]
            }
          ],
          "parameters": [
            {
              "name": "material_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Material Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Material"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/progress/": {
        "get": {
          "tags": [
            "Progress"
          ],
          "summary": "Get Progress",
          "description": "Get all progress entries. Requires READ_PROGRESS scope.",
          "operationId": "get_progress_api_v1_progress__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:progress"
              ]
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Progress"
                    },
                    "title": "Response Get Progress Api V1 Progress  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Progress"
          ],
          "summary": "Create Progress",
          "description": "Create a new progress entry. Requires WRITE_PROGRESS scope.",
          "operationId": "create_progress_api_v1_progress__post",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:progress"
              ]
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Progress"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Progress"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/progress/{progress_id}": {
        "get": {
          "tags": [
            "Progress"
          ],
          "summary": "Get Progress Entry",
          "description": "Get a specific progress entry. Requires READ_PROGRESS scope.",
          "operationId": "get_progress_entry_api_v1_progress__progress_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:progress"
              ]
            }
          ],
          "parameters": [
            {
              "name": "progress_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Progress Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Progress"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Progress"
          ],
          "summary": "Update Progress",
          "description": "Update a progress entry. Requires WRITE_PROGRESS scope.",
          "operationId": "update_progress_api_v1_progress__progress_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:progress"
              ]
            }
          ],
          "parameters": [
            {
              "name": "progress_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Progress Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Progress"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Progress"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Progress"
          ],
          "summary": "Delete Progress",
          "description": "Delete a progress entry. Requires DELETE_PROGRESS scope.",
          "operationId": "delete_progress_api_v1_progress__progress_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "delete:progress"
              ]
            }
          ],
          "parameters": [
            {
              "name": "progress_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Progress Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Progress"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/analytics/": {
        "get": {
          "tags": [
            "Analytics"
          ],
          "summary": "Get Analytics",
          "description": "Get all analytics. Requires READ_ANALYTICS scope.",
          "operationId": "get_analytics_api_v1_analytics__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:analytics"
              ]
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Analytics"
                    },
                    "title": "Response Get Analytics Api V1 Analytics  Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Analytics"
          ],
          "summary": "Create Analytics",
          "description": "Create a new analytics entry. Requires WRITE_ANALYTICS scope.",
          "operationId": "create_analytics_api_v1_analytics__post",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:analytics"
              ]
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Analytics"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/analytics/{analytics_id}": {
        "get": {
          "tags": [
            "Analytics"
          ],
          "summary": "Get Analytics Entry",
          "description": "Get a specific analytics entry. Requires READ_ANALYTICS scope.",
          "operationId": "get_analytics_entry_api_v1_analytics__analytics_id__get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:analytics"
              ]
            }
          ],
          "parameters": [
            {
              "name": "analytics_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Analytics Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Analytics"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Analytics"
          ],
          "summary": "Update Analytics",
          "description": "Update an analytics entry. Requires WRITE_ANALYTICS scope.",
          "operationId": "update_analytics_api_v1_analytics__analytics_id__put",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "write:analytics"
              ]
            }
          ],
          "parameters": [
            {
              "name": "analytics_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Analytics Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Analytics"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Analytics"
          ],
          "summary": "Delete Analytics",
          "description": "Delete an analytics entry. Requires DELETE_ANALYTICS scope.",
          "operationId": "delete_analytics_api_v1_analytics__analytics_id__delete",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "delete:analytics"
              ]
            }
          ],
          "parameters": [
            {
              "name": "analytics_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Analytics Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Analytics"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/analytics/cohorts/{cohort_id}/performance": {
        "get": {
          "tags": [
            "Analytics"
          ],
          "summary": "Get Cohort Performance",
          "description": "Get performance analytics for a specific cohort. Requires READ_ANALYTICS scope.",
          "operationId": "get_cohort_performance_api_v1_analytics_cohorts__cohort_id__performance_get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:analytics"
              ]
            }
          ],
          "parameters": [
            {
              "name": "cohort_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Cohort Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CohortPerformance"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/analytics/students/{student_id}/performance": {
        "get": {
          "tags": [
            "Analytics"
          ],
          "summary": "Get Student Performance",
          "description": "Get performance analytics for a specific student. Requires READ_ANALYTICS scope.",
          "operationId": "get_student_performance_api_v1_analytics_students__student_id__performance_get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:analytics"
              ]
            }
          ],
          "parameters": [
            {
              "name": "student_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Student Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StudentPerformance"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/analytics/curriculum/{curriculum_id}/performance": {
        "get": {
          "tags": [
            "Analytics"
          ],
          "summary": "Get Curriculum Performance",
          "description": "Get performance analytics for a specific curriculum. Requires READ_ANALYTICS scope.",
          "operationId": "get_curriculum_performance_api_v1_analytics_curriculum__curriculum_id__performance_get",
          "security": [
            {
              "OAuth2PasswordBearer": [
                "read:analytics"
              ]
            }
          ],
          "parameters": [
            {
              "name": "curriculum_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Curriculum Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurriculumPerformance"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/": {
        "get": {
          "summary": "Root",
          "operationId": "root__get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          }
        }
      },
      "/health": {
        "get": {
          "summary": "Health Check",
          "operationId": "health_check_health_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ActivityStatus": {
          "type": "string",
          "enum": [
            "not_started",
            "in_progress",
            "completed"
          ],
          "title": "ActivityStatus"
        },
        "Analytics": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "student_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Student Id"
            },
            "cohort_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cohort Id"
            },
            "curriculum_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Curriculum Id"
            },
            "metric_type": {
              "type": "string",
              "title": "Metric Type"
            },
            "metric_name": {
              "type": "string",
              "title": "Metric Name"
            },
            "metric_value": {
              "type": "number",
              "title": "Metric Value"
            },
            "period_start": {
              "type": "string",
              "format": "date-time",
              "title": "Period Start"
            },
            "period_end": {
              "type": "string",
              "format": "date-time",
              "title": "Period End"
            }
          },
          "type": "object",
          "required": [
            "metric_type",
            "metric_name",
            "metric_value",
            "period_start",
            "period_end"
          ],
          "title": "Analytics"
        },
        "Assessment": {
          "properties": {
            "student_id": {
              "type": "string",
              "format": "uuid",
              "title": "Student Id"
            },
            "course_id": {
              "type": "string",
              "format": "uuid",
              "title": "Course Id"
            },
            "lesson_id": {
              "type": "string",
              "format": "uuid",
              "title": "Lesson Id"
            },
            "assignment_id": {
              "type": "string",
              "format": "uuid",
              "title": "Assignment Id"
            },
            "text": {
              "type": "string",
              "title": "Text"
            },
            "attempts": {
              "type": "integer",
              "title": "Attempts"
            },
            "score": {
              "type": "number",
              "title": "Score"
            },
            "cefr_level": {
              "$ref": "#/components/schemas/CEFRLevel"
            },
            "vocabulary_score": {
              "type": "number",
              "title": "Vocabulary Score"
            },
            "grammar_score": {
              "type": "number",
              "title": "Grammar Score"
            },
            "coherence_score": {
              "type": "number",
              "title": "Coherence Score"
            },
            "complexity_score": {
              "type": "number",
              "title": "Complexity Score"
            },
            "feedback": {
              "type": "string",
              "title": "Feedback"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "submitted_at": {
              "type": "string",
              "format": "date-time",
              "title": "Submitted At"
            }
          },
          "type": "object",
          "required": [
            "student_id",
            "course_id",
            "lesson_id",
            "assignment_id",
            "text",
            "attempts",
            "score",
            "cefr_level",
            "vocabulary_score",
            "grammar_score",
            "coherence_score",
            "complexity_score",
            "feedback"
          ],
          "title": "Assessment"
        },
        "AssessmentSubmission": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "assessment_id": {
              "type": "string",
              "title": "Assessment Id"
            },
            "student_id": {
              "type": "string",
              "title": "Student Id"
            },
            "score": {
              "type": "number",
              "title": "Score"
            },
            "feedback": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Feedback"
            },
            "submitted_at": {
              "type": "string",
              "format": "date-time",
              "title": "Submitted At"
            }
          },
          "type": "object",
          "required": [
            "assessment_id",
            "student_id",
            "score"
          ],
          "title": "AssessmentSubmission"
        },
        "Body_login_api_v1_auth_login_post": {
          "properties": {
            "grant_type": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^password$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Grant Type"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            },
            "scope": {
              "type": "string",
              "title": "Scope",
              "default": ""
            },
            "client_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Id"
            },
            "client_secret": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Secret"
            }
          },
          "type": "object",
          "required": [
            "username",
            "password"
          ],
          "title": "Body_login_api_v1_auth_login_post"
        },
        "CEFRLevel": {
          "type": "string",
          "enum": [
            "A1",
            "A2",
            "B1",
            "B2",
            "C1",
            "C2"
          ],
          "title": "CEFRLevel"
        },
        "Cohort": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "curriculum_id": {
              "type": "string",
              "title": "Curriculum Id"
            },
            "start_date": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            },
            "end_date": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            },
            "max_students": {
              "type": "integer",
              "title": "Max Students"
            },
            "current_students": {
              "type": "integer",
              "title": "Current Students",
              "default": 0
            },
            "status": {
              "$ref": "#/components/schemas/CohortStatus",
              "default": "planning"
            },
            "proficiency_level": {
              "$ref": "#/components/schemas/app__models__enums__ProficiencyLevel"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            }
          },
          "type": "object",
          "required": [
            "name",
            "curriculum_id",
            "start_date",
            "end_date",
            "max_students",
            "proficiency_level"
          ],
          "title": "Cohort"
        },
        "CohortPerformance": {
          "properties": {
            "cohort_id": {
              "type": "string",
              "format": "uuid",
              "title": "Cohort Id"
            },
            "total_students": {
              "type": "integer",
              "title": "Total Students"
            },
            "active_students": {
              "type": "integer",
              "title": "Active Students"
            },
            "average_score": {
              "type": "number",
              "title": "Average Score"
            },
            "completion_rate": {
              "type": "number",
              "title": "Completion Rate"
            },
            "engagement_rate": {
              "type": "number",
              "title": "Engagement Rate"
            },
            "period_start": {
              "type": "string",
              "format": "date-time",
              "title": "Period Start"
            },
            "period_end": {
              "type": "string",
              "format": "date-time",
              "title": "Period End"
            }
          },
          "type": "object",
          "required": [
            "cohort_id",
            "total_students",
            "active_students",
            "average_score",
            "completion_rate",
            "engagement_rate",
            "period_start",
            "period_end"
          ],
          "title": "CohortPerformance"
        },
        "CohortStatus": {
          "type": "string",
          "enum": [
            "planning",
            "enrolling",
            "in_progress",
            "completed",
            "cancelled"
          ],
          "title": "CohortStatus"
        },
        "CurriculumPerformance": {
          "properties": {
            "curriculum_id": {
              "type": "string",
              "format": "uuid",
              "title": "Curriculum Id"
            },
            "total_cohorts": {
              "type": "integer",
              "title": "Total Cohorts"
            },
            "total_students": {
              "type": "integer",
              "title": "Total Students"
            },
            "average_score": {
              "type": "number",
              "title": "Average Score"
            },
            "completion_rate": {
              "type": "number",
              "title": "Completion Rate"
            },
            "engagement_rate": {
              "type": "number",
              "title": "Engagement Rate"
            },
            "period_start": {
              "type": "string",
              "format": "date-time",
              "title": "Period Start"
            },
            "period_end": {
              "type": "string",
              "format": "date-time",
              "title": "Period End"
            }
          },
          "type": "object",
          "required": [
            "curriculum_id",
            "total_cohorts",
            "total_students",
            "average_score",
            "completion_rate",
            "engagement_rate",
            "period_start",
            "period_end"
          ],
          "title": "CurriculumPerformance"
        },
        "CurriculumTemplate": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "level": {
              "$ref": "#/components/schemas/app__models__base__ProficiencyLevel"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "type": "string",
              "title": "Description"
            },
            "total_trimesters": {
              "type": "integer",
              "title": "Total Trimesters"
            }
          },
          "type": "object",
          "required": [
            "level",
            "name",
            "description",
            "total_trimesters"
          ],
          "title": "CurriculumTemplate"
        },
        "Enrollment": {
          "properties": {
            "student_id": {
              "type": "string",
              "format": "uuid",
              "title": "Student Id"
            },
            "cohort_id": {
              "type": "string",
              "format": "uuid",
              "title": "Cohort Id"
            },
            "status": {
              "$ref": "#/components/schemas/EnrollmentStatus",
              "default": "pending"
            },
            "reason": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "enrolled_at": {
              "type": "string",
              "format": "date-time",
              "title": "Enrolled At"
            },
            "completed_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completed At"
            },
            "withdrawn_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Withdrawn At"
            }
          },
          "type": "object",
          "required": [
            "student_id",
            "cohort_id"
          ],
          "title": "Enrollment"
        },
        "EnrollmentStatus": {
          "type": "string",
          "enum": [
            "pending",
            "active",
            "completed",
            "withdrawn"
          ],
          "title": "EnrollmentStatus"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "Material": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "title": {
              "type": "string",
              "title": "Title"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "type": {
              "$ref": "#/components/schemas/MaterialType"
            },
            "url": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Url"
            },
            "file_path": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Path"
            },
            "day_id": {
              "type": "string",
              "title": "Day Id"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            }
          },
          "type": "object",
          "required": [
            "title",
            "type",
            "day_id"
          ],
          "title": "Material"
        },
        "MaterialType": {
          "type": "string",
          "enum": [
            "document",
            "video",
            "audio",
            "image",
            "link",
            "quiz",
            "assignment",
            "other"
          ],
          "title": "MaterialType"
        },
        "Progress": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "student_id": {
              "type": "string",
              "format": "uuid",
              "title": "Student Id"
            },
            "day_id": {
              "type": "string",
              "format": "uuid",
              "title": "Day Id"
            },
            "status": {
              "$ref": "#/components/schemas/ActivityStatus"
            },
            "score": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Score"
            },
            "feedback": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Feedback"
            },
            "completed_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completed At"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            }
          },
          "type": "object",
          "required": [
            "student_id",
            "day_id",
            "status"
          ],
          "title": "Progress"
        },
        "StudentPerformance": {
          "properties": {
            "student_id": {
              "type": "string",
              "format": "uuid",
              "title": "Student Id"
            },
            "cohort_id": {
              "type": "string",
              "format": "uuid",
              "title": "Cohort Id"
            },
            "overall_score": {
              "type": "number",
              "title": "Overall Score"
            },
            "attendance_rate": {
              "type": "number",
              "title": "Attendance Rate"
            },
            "completion_rate": {
              "type": "number",
              "title": "Completion Rate"
            },
            "engagement_rate": {
              "type": "number",
              "title": "Engagement Rate"
            },
            "period_start": {
              "type": "string",
              "format": "date-time",
              "title": "Period Start"
            },
            "period_end": {
              "type": "string",
              "format": "date-time",
              "title": "Period End"
            }
          },
          "type": "object",
          "required": [
            "student_id",
            "cohort_id",
            "overall_score",
            "attendance_rate",
            "completion_rate",
            "engagement_rate",
            "period_start",
            "period_end"
          ],
          "title": "StudentPerformance"
        },
        "StudentProfile": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "status": {
              "$ref": "#/components/schemas/StudentStatus",
              "default": "pending_approval"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            }
          },
          "type": "object",
          "required": [
            "user_id"
          ],
          "title": "StudentProfile"
        },
        "StudentStatus": {
          "type": "string",
          "enum": [
            "pending_approval",
            "approved",
            "rejected"
          ],
          "title": "StudentStatus"
        },
        "User": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "email": {
              "type": "string",
              "title": "Email"
            },
            "hashed_password": {
              "type": "string",
              "title": "Hashed Password"
            },
            "full_name": {
              "type": "string",
              "title": "Full Name"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "role": {
              "$ref": "#/components/schemas/UserRole",
              "default": "student"
            },
            "is_active": {
              "type": "boolean",
              "title": "Is Active",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "email",
            "hashed_password",
            "full_name",
            "username"
          ],
          "title": "User"
        },
        "UserRole": {
          "type": "string",
          "enum": [
            "student",
            "tutor",
            "admin"
          ],
          "title": "UserRole"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        },
        "app__models__base__ProficiencyLevel": {
          "type": "string",
          "enum": [
            "A1-A2",
            "B1-B2",
            "C1-C2"
          ],
          "title": "ProficiencyLevel"
        },
        "app__models__enums__ProficiencyLevel": {
          "type": "string",
          "enum": [
            "beginner",
            "intermediate",
            "advanced"
          ],
          "title": "ProficiencyLevel"
        }
      },
      "securitySchemes": {
        "OAuth2PasswordBearer": {
          "type": "oauth2",
          "flows": {
            "password": {
              "scopes": {
                "read:users": "Read user information",
                "write:users": "Modify user information",
                "delete:users": "Delete users",
                "read:students": "Read student information",
                "write:students": "Modify student information",
                "delete:students": "Delete students",
                "read:curriculum": "Read curriculum information",
                "write:curriculum": "Modify curriculum information",
                "delete:curriculum": "Delete curriculum",
                "read:cohorts": "Read cohort information",
                "write:cohorts": "Modify cohort information",
                "delete:cohorts": "Delete cohorts",
                "read:enrollments": "Read enrollment information",
                "write:enrollments": "Modify enrollment information",
                "delete:enrollments": "Delete enrollments",
                "read:assessments": "Read assessment information",
                "write:assessments": "Modify assessment information",
                "delete:assessments": "Delete assessments",
                "read:materials": "Read material information",
                "write:materials": "Modify material information",
                "delete:materials": "Delete materials",
                "read:progress": "Read progress information",
                "write:progress": "Modify progress information",
                "read:analytics": "Read analytics information"
              },
              "tokenUrl": "/api/v1/auth/login"
            }
          }
        }
      }
    }
  }